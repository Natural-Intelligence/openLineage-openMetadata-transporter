# This workflow will build a Java project with Maven

name: Java CI with Maven


on:
  pull_request:
    types:
      - synchronize
      - opened
      - reopened
      - closed
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: "Define the release version"
        required: true
        default: ""
      developmentVersion:
        description: "Define the snapshot version"
        required: true
        default: ""

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Maven Central Repository
      uses: actions/setup-java@v3
      with:
        java-version: 20.0.1
        distribution: 'temurin'
        java-package: 'jdk'
        cache: 'maven'
        server-id: ossrh
    - name: Configure Git User
      run: |
        git config user.email "devops@naturalint.com"
        git config user.name "GitHub Actions"
    - name: Import GPG Key
      uses: crazy-max/ghaction-import-gpg@v5.0.0
      with:
        gpg_private_key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
    - name: Verify whether a release is ready
      id: release
      shell: bash
      run: |
        if [ "${{ github.event.inputs.releaseVersion }}" != "" ] && [ "${{ github.event.inputs.developmentVersion }}" != "" ]; then
          echo "auto_release=true" >> $GITHUB_OUTPUT
        else
          echo "auto_release=false" >> $GITHUB_OUTPUT
        fi
    - name: Build PR with Maven
      run: |
        if [ ${{ github.event_name == 'pull_request' }} ]; then
          echo "deploy_skip=true" >> $GITHUB_OUTPUT
        else
          echo "deploy_skip=false" >> $GITHUB_OUTPUT
        fi

    - name: Release with Maven
      run: |
        mvn -B -U \
          -Pci-cd \
          release:prepare \
          release:perform \
          javadoc:jar \
          source:jar \
          -s settings.xml \
          -Darguments="-Dmaven.deploy.skip=${{ env.deploy_skip }}" \
          -Dgpg.passphrase=${{ secrets.MAVEN_GPG_PASSPHRASE }} \
          -DreleaseVersion=${{ github.event.inputs.releaseVersion }} \
          -DdevelopmentVersion=${{ github.event.inputs.developmentVersion }} \
          deploy
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        AUTO_RELEASE_AFTER_CLOSE: ${{ steps.release.outputs.auto_release }}
